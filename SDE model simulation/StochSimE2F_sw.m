function [Tspan,x] = StochSimE2F_sw(dt, endTime, sigma, delta, x0,Serumfinal,paraset,Z)

Tspan=0:dt:endTime;     %time span
x = zeros(length(Tspan),10);
x(1,:) = x0;                   %initial conditions


kMC=paraset(1)*Z;kS=paraset(2)*Z;kEFm=paraset(3)*Z;kb=paraset(4)*Z;
kEFp=paraset(5);kCD=paraset(6)*Z;kCDS=paraset(7)*Z;kCE=paraset(8)*Z;kRB=paraset(9)*Z;
kRE=paraset(10)/Z;kRBDP=paraset(11)*Z;kRBP1=paraset(12);kRBP2=paraset(13);kAFb=paraset(14)*Z;
kAFEF=paraset(15)*Z;kAFMC=paraset(16)*Z;kMREF=paraset(17)*Z;kMRMC=paraset(18)*Z;
KAFMC=paraset(19)*Z;KAFEF=paraset(20)*Z;KMRMC=paraset(21)*Z;KMREF=paraset(22)*Z;
KMC=paraset(23)*Z;KMC1=paraset(24)*Z;KS=paraset(25);KEF=paraset(26)*Z;KR=paraset(27)*Z;
KMR=paraset(28)*Z;KAFR=paraset(29)/Z;KRP=paraset(30)*Z;
KCD=paraset(31)*Z;KCE=paraset(32)*Z;KMCCD=paraset(33)*Z;

dEFm=paraset(34);dEFp=paraset(35);dCD=paraset(36);dCE=paraset(37);dRB=paraset(38);
dRP=paraset(39);dRE=paraset(40);dMC=paraset(41);dAF=paraset(42);dMR=paraset(43);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ODEs to Convert %%%%%%%%%%%%%%%%%%%%%%%%%
% dMC/dt=kMC*S/(KS+S)-dMC*MC
% dEFm/dt=kS*S/(KS+S)+kEFm*(MC/(KMC+MC))*(EFp/(KEF+EFp))+(kb*MC/(KMC1+MC))*
%         (KR/(KR+MC))-dEFm*EFm
% dEFp/dt=kEFp*EFm*(KMR/(KMR+MR))+kRBP1*CD*RE/(KCD+RE)+kRBP2*CE*RE/(KCE+RE)
%         -kRE*RB*EFp-(1+KAFR*AF)*dEFp*EFp
% dCD/dt=kCD*MC/(KMCCD+MC)+kCDS*S/(KS+S)-dCD*CD
% dRB/dt=kRB+kRBDP*RP/(KRP+RP)-kRE*RB*EFp-kRBP1*CD*RB/(KCD+RB)-kRBP2*CE*RB/(KCE+RB)-dRB*RB
% dCE/dt=kCE*EFp/(KEF+EFp)-dCE*CE
% dRP/dt=kRBP1*CD*RB/(KCD+RB)+kRBP2*CE*RB/(KCE+RB)-kRBDP*RP/(KRP+RP)+kRBP1*CD*RE/(KCD+RE)+kRBP2*CE*RE/(KCE+RE)-dRP*RP
% dRE/dt=kRE*RB*EFp-kRBP1*CD*RE/(KCD+RE)-kRBP2*CE*RE/(KCE+RE)-dRE*RE
% dAF/dt=kAFb+kAFEF*EFp/(KEFAF+EFp)+kAFMC*MC/(KMCAF+MC)-dAF*AF
% dMR/dt=(kMRMC*MC)/(KMCMR+MC)+(kMREF*EFp)/(KEFMR+EFp)-dMR*MR

% EFp=x(1, 3);

for ii=1:length(Tspan)-1
    

    MC=x(ii, 1);EFm=x(ii, 2);EFp=x(ii, 3);CD=x(ii, 4);RB=x(ii, 5);CE=x(ii, 6);
    RP=x(ii, 7);RE=x(ii, 8);AF=x(ii, 9);MR=x(ii, 10); 
    
    randnum=randn(1,6); % intrinsic and extrinsic noise: white noise scaled by 'sigma' and 'delta', respectively
    
    x(ii+1, 1)=MC+dt*(kMC*Serumfinal/(KS+Serumfinal)-dMC*MC)+...
         sigma*(sqrt(dt*kMC*Serumfinal/(KS+Serumfinal))*randn-sqrt(dt*dMC*MC)*randn)+...
        delta*randn*dt;
    
    x(ii+1, 2)=EFm+dt*((kS*Serumfinal/(KS+Serumfinal)+kEFm*(MC/(KMC+MC))*(EFp/(KEF+EFp))+(kb*MC/(KMC1+MC)))*(KR/(KR+MC))-dEFm*EFm)...
        +sigma*(sqrt(dt*(kS*Serumfinal/(KS+Serumfinal)+kEFm*(MC/(KMC+MC))*(EFp/(KEF+EFp))+(kb*MC/(KMC1+MC)))*(KR/(KR+MC)))*randn...
        -sqrt(dt*dEFm*EFm)*randn)...
        +delta*randn*dt;
%     x(ii+1, 2)=EFm+dt*((kS*Serumfinal/(KS+Serumfinal)+kEFm*(MC/(KMC+MC))*(EFp/(KEF+EFp))+(kb*MC/(KMC1+MC)))*(KR/(KR+MC))-dEFm*EFm)...
%         +sigma*(sqrt(dt*(kS*Serumfinal/(KS+Serumfinal)+kEFm*(MC/(KMC+MC))*(EFp/(KEF+EFp))+(kb*MC/(KMC1+MC)))*(KR/(KR+MC)))*randn...
%         -sqrt(dt*dEFm*EFm)*randn)...
%         +delta*randn*dt;
    
    x(ii+1,3)=EFp+dt*(kEFp*EFm*(KMR/(KMR+MR))+kRBP1*CD*RE/(KCD+RE)+kRBP2*CE*RE/(KCE+RE)-kRE*RB*EFp-(1+KAFR*AF)*dEFp*EFp)...
        +sigma*(sqrt(dt*kEFp*EFm*(KMR/(KMR+MR)))*randn...
        +sqrt(dt*kRBP1*CD*RE/(KCD+RE))*randnum(1)...
        +sqrt(dt*kRBP2*CE*RE/(KCE+RE))*randnum(2)...
        -sqrt(dt*kRE*RB*EFp)*randnum(3)...
        -sqrt(dt*(1+KAFR*AF)*dEFp*EFp)*randn)...
        +delta*randn*dt;
    
    x(ii+1, 4)=CD+dt*(kCD*MC/(KMCCD+MC)+kCDS*Serumfinal/(KS+Serumfinal)-dCD*CD)...
        +sigma*(sqrt(dt*kCD*MC/(KMCCD+MC))*randn...
        +sqrt(dt*kCDS*Serumfinal/(KS+Serumfinal))*randn...
        -sqrt(dt*dCD*CD)*randn)...
        +delta*randn*dt;
    
    x(ii+1, 5)=RB+dt*(kRB+kRBDP*RP/(KRP+RP)-kRE*RB*EFp-kRBP1*CD*RB/(KCD+RB)-kRBP2*CE*RB/(KCE+RB)-dRB*RB)...
        +sigma*(sqrt(dt*kRB)*randn...
        +sqrt(dt*kRBDP*RP/(KRP+RP))*randnum(4)...
        -sqrt(dt*kRE*RB*EFp)*randnum(3)...
        -sqrt(dt*kRBP1*CD*RB/(KCD+RB))*randnum(5)...
        -sqrt(dt*kRBP2*CE*RB/(KCE+RB))*randnum(6)...
        -sqrt(dt*dRB*RB)*randn)...
        +delta*randn*dt;
    
    x(ii+1, 6)=CE+dt*(kCE*EFp/(KEF+EFp)-dCE*CE)...
        +sigma*(sqrt(dt*kCE*EFp/(KEF+EFp))*randn-sqrt(dt*dCE*CE)*randn)...
        +delta*randn*dt;
    
    x(ii+1, 7)=RP+dt*(kRBP1*CD*RB/(KCD+RB)+kRBP2*CE*RB/(KCE+RB)-kRBDP*RP/(KRP+RP)+kRBP1*CD*RE/(KCD+RE)+kRBP2*CE*RE/(KCE+RE)-dRP*RP)...
        +sigma*(sqrt(dt*kRBP1*CD*RB/(KCD+RB))*randnum(5)...
        +sqrt(dt*kRBP2*CE*RB/(KCE+RB))*randnum(6)...
        -sqrt(dt*kRBDP*RP/(KRP+RP))*randnum(4)...
        +sqrt(dt*kRBP1*CD*RE/(KCD+RE))*randnum(1)...
        +sqrt(dt*kRBP2*CE*RE/(KCE+RE))*randnum(2)...
        -sqrt(dt*dRP*RP)*randn)...
        +delta*randn*dt;
    
    x(ii+1, 8)=RE+dt*(kRE*RB*EFp-kRBP1*CD*RE/(KCD+RE)-kRBP2*CE*RE/(KCE+RE)-dRE*RE)...
        +sigma*(sqrt(dt*kRE*RB*EFp)*randnum(3)...
        -sqrt(dt*kRBP1*CD*RE/(KCD+RE))*randnum(1)...
        -sqrt(dt*kRBP2*CE*RE/(KCE+RE))*randnum(2)...
        -sqrt(dt*dRE*RE)*randn)...
        +delta*randn*dt;
    
    x(ii+1, 9)=AF+dt*(kAFb+kAFEF*EFp/(KAFEF+EFp)+kAFMC*MC/(KAFMC+MC)-dAF*AF)...
        +sigma*(sqrt(dt*kAFb)*randn...
        +sqrt(dt*kAFEF*EFp/(KAFEF+EFp))*randn...
        +sqrt(dt*kAFMC*MC/(KAFMC+MC))*randn...
        -sqrt(dt*dAF*AF)*randn)...
        +delta*randn*dt;
    
    x(ii+1, 10)=MR+dt*(kMRMC*MC/(KMRMC+MC)+kMREF*EFp/(KMREF+EFp)-dMR*MR)...
        +sigma*(sqrt(dt*kMRMC*MC/(KMRMC+MC))*randn...
        +sqrt(dt*kMREF*EFp/(KMREF+EFp))*randn...
        -sqrt(dt*dMR*MR)*randn)...
        +delta*randn*dt;
    
    
    % Limit concentrations to zero
    wherezero=x(ii+1,:)<0;
    x(ii+1, wherezero)=0;
end

